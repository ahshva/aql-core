# ุงููุฑุญูุฉ ูฆูข โ ุชูุฒูุน ุงูุฃุฏูุงุฑ ุงูุฐููุฉ ุจูู ุงูููู ุญุณุจ ุงูุงุฎุชุตุงุต

"""
๐งฉ ุงููุฏู: ุฅุนุทุงุก ูู ููุงุฉ ุฏูุฑูุง ูุญุฏุฏูุง (ูุฑุงูุจุฉุ ุงุณุชุฌุงุจุฉุ ุชุญูููุ ุงุชุตุงู...) ุถูู ูุธุงู AQLุ ููุง ูููููู ูู ุชูุฒูุน ุฐูู ููููุงู ูุชุญููู ููุงุกุฉ ุชุดุบูู ุนุงููุฉ.
"""

class Nucleus:
    def __init__(self, id, role):
        self.id = id
        self.role = role

    def perform_role(self):
        actions = {
            "monitor": f"๐ก {self.id} ุชุฑุงูุจ ุงูุฅุดุงุฑุงุช ุงููุญูุทุฉ.",
            "respond": f"๐ {self.id} ุชุณุชุฌูุจ ูููุชุบูุฑุงุช.",
            "analyze": f"๐ {self.id} ุชุญูู ุงูุจูุงูุงุช ุงููุณุชููุฉ.",
            "communicate": f"๐จ {self.id} ุชุฑุณู ูุชุณุชูุจู ุงูุฑุณุงุฆู.",
            "defend": f"๐ก๏ธ {self.id} ุชููุฐ ุจุฑูุชููููุงุช ุงูุญูุงูุฉ."
        }
        print(actions.get(self.role, f"โ {self.id} ูู ููุญุฏุฏ ููุง ุฏูุฑ ูุงุถุญ."))

# ุฅุนุฏุงุฏ ูุฌููุนุฉ ููู ุจุฃุฏูุงุฑ ูุฎุชููุฉ
nuclei = [
    Nucleus("N1", "monitor"),
    Nucleus("N2", "analyze"),
    Nucleus("N3", "respond"),
    Nucleus("N4", "communicate"),
    Nucleus("N5", "defend"),
    Nucleus("N6", "unknown")
]

# ุชูููุฐ ุงูุฃุฏูุงุฑ
for n in nuclei:
    n.perform_role()
