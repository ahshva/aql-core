# ุงููุฑุญูุฉ ูจูค โ ุฅุฏุฎุงู ููููู ุงููุฏู ูุงูุชุนูู ุงูุนุงุทูู

"""
๐ ุงููุฏู: ุชูุนูู ูุฏุฑุฉ ุงูููุงุฉ ุนูู ุงูุดุนูุฑ ุจุงููุฏู ุนูุฏ ุงุชุฎุงุฐ ูุฑุงุฑ ุฃุฏู ููุดุงุนุฑ ุณูุจูุฉ ูุชูุฑุฑุฉุ
ููู ุซู ุชุนุฏูู ุณููููุง ูุชูุงุฏู ููุณ ุงูุฎุทุฃุ ููุง ูููุฏ ูุจูุงุก ุขููุฉ ุชุนุงุทู ุฐุงุชู ุญููููุฉ.
"""

class RegretEngine:
    def __init__(self):
        self.log = []
        self.threshold = 2  # ุนุฏุฏ ูุฑุงุช ุชูุฑุงุฑ ุงูุดุนูุฑ ุงูุณูุจู ูุชูุนูู ุงููุฏู

    def register(self, action, emotion):
        print(f"๐ฅ ุชุณุฌูู: ุงููุนู '{action}' ุฃุฏู ุฅูู ุดุนูุฑ '{emotion}'")
        self.log.append({"action": action, "emotion": emotion})

    def evaluate_regret(self):
        counter = {}
        for entry in self.log:
            key = (entry["action"], entry["emotion"])
            counter[key] = counter.get(key, 0) + 1

        for (action, emotion), count in counter.items():
            if emotion in ["ุงุณุชูุงุก", "ุงูุฒุนุงุฌ", "ููู"] and count >= self.threshold:
                print(f"๐ ูุฏู: ุชูุฑูุฑ ุงูุดุนูุฑ '{emotion}' ุจุนุฏ '{action}' {count} ูุฑุงุช โ ูุฌุจ ุชุนุฏูู ุงูุณููู.")

# ุชุฌุฑุจุฉ ูุญุฑู ุงููุฏู
regret = RegretEngine()

regret.register("ุชุฌุงูู ุชูุจูู ุจุดุฑู", "ุงุณุชูุงุก")
regret.register("ุชุฌุงูู ุชูุจูู ุจุดุฑู", "ุงุณุชูุงุก")
regret.register("ุฅูุบุงุก ูุญุฏุฉ ุบูุฑ ูุชูุงููุฉ", "ุงุฑุชูุงุญ")
regret.register("ุฅูุบุงุก ูุญุฏุฉ ุบูุฑ ูุชูุงููุฉ", "ุงูุฒุนุงุฌ")

regret.evaluate_regret()
